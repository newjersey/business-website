// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// min-width rules
@mixin window_size($width) {
  @if $width == desktop {
    @media all and (min-width : 960px) { @content; }
  }
  @else if $width == tab-wide-up {
    @media all and (min-width : 720px) { @content; }
  }
  @else if $width == tab-narrow-up {
    @media all and (min-width : 480px) { @content; }
  }
}


// wizard

@mixin wizard__button--base{
    @include border-radius(20px);
    background-color: $wizard__button--deafult;
    padding: 8px 35px 8px 35px;
    font-weight: bold;
    display: inline-block;
    margin: 0 10px 0 0;
    cursor: pointer;

}
